import java.awt.*;
import java.io.*;
class Calculator {
	public String[] romanDates = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X"};
	public String[] arabianDates = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
	public void calculate (String value) throws IOException {
		char operator = equals(value);
		String[] mass = null;
		String romanData;
		int first = 0;
		int second = 0;
		int amount = 0;
		int amountRoman = 0;
		boolean romanTrue = false;
		boolean check = true;
		switch(operator){
			case '+':
				mass = value.split("[+]");
				break;
			case '-':
				mass = value.split("[-]");
				break;
			case '*':
				mass = value.split("[*]", 2);
				break;
			case '/':
				mass = value.split("[/]", 2);
				break;
			default:	
		}
		try {
			if(mass.length>2)
				throw new IOException();
		} catch(IOException e){
			System.out.println("Значения введены неверно!");
			check = false;
		}
		
		romanData = mass[0];
		for(int i=0; i<romanDates.length; i++){
			if(romanData.equals(romanDates[i])){
				first = romanArabian(mass[0]);
				second = romanArabian(mass[1]);
				romanTrue = true;
				break;
			} else if (romanData.equals(arabianDates[i])) {
				first = Integer.parseInt(mass[0]);
				second = Integer.parseInt(mass[1]);
				break;
			}
		}
		try {
			if (first==0 || second==10)
				throw new IOException();
			} catch (IOException e) {
				System.out.println("Неверный формат числа");
				check = false;
			}
		switch(operator){
			case '+':
				amount = first + second;
				break;
			case '-':
				amount = first - second;
				break;
			case '*':
				amount = first * second;
				break;
			case '/':
				amount = first / second;
				break;
			default:
				System.out.println("Значения не введены");	
		}
		try {
			if (romanTrue == true && amount<0)
				throw new IOException();
			} catch (IOException e) {
				System.out.println("Значение меньше нуля!");
				check = false;
			}
		if (check == true){
			if(romanTrue == true){
				System.out.println("=" + arabianRoman(amount));
			} else {
				System.out.println("=" + amount);
			}
		}	
	}
	public int romanArabian (String value){
		int x = 0;
		for(int i=0; i<romanDates.length; i++)
			if(value.equals(romanDates[i]))
				x = i+1;
		return x;
	}
	public String arabianRoman (int value){
		String[] romanDates = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X",
				"XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI",
				"XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX",
				"XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", 
				"XXXIX", "XL", "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII",
				"XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LVIX",
				"LX", "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX",
				"LXX", "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII",
				"LXXIX", "LXXX", "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", 
				"LXXXVII", "LXXXVIII", "LXXXIX", "XC", "XCI", "XCII", "XCIII", "XCIV", "XCV",
				"XCVI", "XCVII", "XCVIII", "XCIX", "C"};
		String amount = null;
		for(int i=0; i<romanDates.length; i++)
			if(i == value)
				amount = romanDates[i-1];
		return amount;		
	}
	public char equals(String string){
		char[] values = string.toCharArray();
		char symbol = 0;
		for (char c : values){
			switch(c){
				case '+':
					symbol = '+';
					break;
				case '-':
					symbol = '-';
					break;
				case '*':
					symbol = '*';
					break;
				case '/':
					symbol = '/';
					break;
				default:
			}
		}
		return symbol;
	}
}

public class CalculatorApp {
	public static void main(String[] args) throws IOException {
		Calculator clcltr = new Calculator();
		String value;
		while(true){
			System.out.println("Введите значения:");
			value = getString();
			clcltr.calculate(value);	
		}
	}
	public static String getString () throws IOException {
		InputStreamReader isr = new InputStreamReader(System.in);
		BufferedReader br = new BufferedReader(isr);
		String s = br.readLine();
		return s;	
	}
}
